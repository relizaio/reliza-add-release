name: 'RelizaHub submit metadata'
description: 'Submit Release metadata for a release on RelizaHub'
branding:
  icon: 'info'
  color: 'green'
inputs:
  reliza_api_id:
    description: "Reliza Hub API ID"
    required: true
  reliza_api_key:
    description: "Reliza Hub API KEY"
    required: true
  image_full_name:
    description: "Full name of the Docker image with registry prefix"
    required: true
  image_digest:
    description: "SHA 256 digest of the image artifact"
    required: true
  reliza_build_start:
    description: "Build start time"
    required: true
  reliza_full_version:
    description: "Version obtained from RelizaHub for this release"
    required: true
  reliza_build_status:
    description: "Build status - [complete | rejected]"
    required: true
  reliza_api_url:
    description: "Reliza Hub API URL"
    required: false
    default: 'https://app.relizahub.com'
  artifact_type:
    description: "Type of artifact created by this release [Docker, File]"
    required: false
    default: 'Docker'
  commit_list:
    description: "List of commits"
    required: false
  reliza_project_id:
    description: "Project UUID for this release if org-wide key is used"
    required: false
  enable_sbom:
    required: false
    default: 'true'
    description: Generates SBOM and stores it along with the artifact
  registry_username:
    description: "Username for image registry"
    required: false
  registry_password:
    description: "Password for image registry"
    required: false
  registry_host:
    description: "Host for image registry"
    default: null
    required: false
  path:
    description: "Path to the relative to root of the repo (default is '.')"
    required: false
    default: .
runs:
  using: "composite"
  steps:
    - name: Instantiate Reliza status
      shell: bash
      run: echo "--status ${{inputs.reliza_build_status}} " > reliza_command
    - id: setup-node-js
      if: ${{ inputs.enable_sbom == 'true' }}
      name: Setup Node JS
      uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Login to DockerHub
      uses: docker/login-action@v3
      if: ${{ inputs.registry_host == null }}
      with:
        username: ${{inputs.registry_username}}
        password: ${{inputs.registry_password}}
    - name: Login to Docker Registry
      uses: docker/login-action@v3
      if: ${{ inputs.registry_host != null }}
      with:
        registry: ${{inputs.registry_host}}
        username: ${{inputs.registry_username}}
        password: ${{inputs.registry_password}}

    - id: docker-test
      name: Docker Test
      shell: bash
      run: |
        docker pull ${{inputs.image_full_name}}@${{inputs.image_digest}}
        docker save -o image_clone_${{ inputs.reliza_full_version }}.tar ${{inputs.image_full_name}}@${{inputs.image_digest}} 
    - id: install-cdxgen
      if: ${{ inputs.enable_sbom == 'true' }}
      name: Install cdxgen cli
      shell: bash
      run: npm install -g @cyclonedx/cdxgen
    - id: check_path
      name: Check Current path
      shell: bash
      run: |
        pwd
    - name: Submit metadata to Reliza Hub
      shell: bash
      run: |
        cd ${{ inputs.path }}
        set -x
        set -e
        # Generate SBOMs if Enabled
        if [[ ${{inputs.enable_sbom}} == 'true' ]]
        then
          echo "Generating SBOMs ... "
          cdxgen ./ --type application --project-version ${{ inputs.reliza_full_version }} -o fs.cdx.bom.json
          cdxgen image_clone_${{ inputs.reliza_full_version }}.tar -t docker --project-version ${{ inputs.reliza_full_version }} -o docker.cdx.bom.json
          echo -n "--artboms container:docker.cdx.bom.json " >> reliza_command
          echo -n "--fsbom fs.cdx.bom.json " >> reliza_command
        fi
        echo -n "-b ${{github.ref_name}} -k ${{ inputs.reliza_api_key }} \
          -i ${{ inputs.reliza_api_id }} -u ${{ inputs.reliza_api_url }} \
          -v ${{ inputs.reliza_full_version }} " >> reliza_command
        echo -n "--artid ${{inputs.image_full_name}} " >> reliza_command
        echo -n "--artbuildid github${{github.action}}${{github.sha}} " >> reliza_command
        echo -n "--artbuilduri https://github.com/${{github.repository}}/actions/runs/${{github.run_id}} " >> reliza_command
        echo -n "--artcimeta GitHub Actions " >> reliza_command
        echo -n "--arttype ${{inputs.artifact_type}} " >> reliza_command
        if [[ ${{inputs.image_digest}} != "" ]]
        then
          echo -n "--artdigests ${{inputs.image_digest}} " >> reliza_command
        fi
        if [ ! -z ${{inputs.commit_list}} ]
        then
          echo -n "--commits ${{inputs.commit_list}} " >> reliza_command
        fi
        if [ ! -z ${{inputs.reliza_project_id}} ]
        then
          echo -n "--project ${{inputs.reliza_project_id}} " >> reliza_command
        fi
        echo -n "--datestart ${{inputs.reliza_build_start}} " >> reliza_command
        echo -n "--dateend $(date -Iseconds) " >> reliza_command
        # debug
        cat reliza_command
        # send data
        echo reliza-cli addrelease $(cat reliza_command) > rlz_cmd_exec
        eval $(cat rlz_cmd_exec)
    - name: Fail build if reliza status is rejected
      shell: bash
      run: |
        status_complete_check=$(cat reliza_command | grep 'status complete' | wc -l)
        if [[ "$status_complete_check" != "1" ]]
        then
          echo "Failing build since Reliza build Status is rejected"
          exit 1
        fi